# This file is centrally managed as a template file in https://github.com/canonical/solutions-engineering-automation
# To update the file:
# - Edit it in the canonical/solutions-engineering-automation repository.
# - Open a PR with the changes.
# - When the PR merges, the soleng-terraform bot will open a PR to the target repositories with the changes.
name: Publish snap

on:
  push:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  check:
    uses: ./.github/workflows/check.yaml
    secrets: inherit

  release:
    runs-on: ${{ matrix.runs-on }}
    needs: check
    strategy:
      fail-fast: false
      matrix:
        runs-on: [[ubuntu-22.04]]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Complete git history is required to generate the version from git tags.

      - name: Determine system architecture
        run: echo "SYSTEM_ARCH=$(uname -m)" >> $GITHUB_ENV

      - name: Download the built snap from check workflow
        uses: actions/download-artifact@v4
        with:
          name: snap_${{ env.SYSTEM_ARCH }}

      - name: Find the downloaded snap file
        run: echo "SNAP_FILE=$(find . -name "*.snap")" >> $GITHUB_ENV

      - uses: snapcore/action-publish@v1
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.STORE_LOGIN }}
        with:
          snap: ${{ env.SNAP_FILE }}
          # Comma-separated list of channels to release the snap to.
          release: latest/edge

  notify-on-release-failure:
    runs-on: ubuntu-latest
    needs:
      - check
      - release
    if: failure()
    steps:
      - name: Comment on commit if release workflow fails
        uses: actions/github-script@v7
        with:
          script: |
            const failedJobs = ${{ toJSON(needs) }};
            let failedJobNames = Object.keys(failedJobs).filter(job => failedJobs[job].result === 'failure');
            const body = [
              "# Release workflow: ${{ github.workflow }} failed!",
              "**Failed jobs**: " + (failedJobNames.join(', ') || 'unknown'),
              "**Check details**: [View run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})",
              "@canonical/solutions-engineering"
            ].join('\n');
            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: body
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
